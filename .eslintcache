[{"D:\\projects\\drum-machine\\src\\index.js":"1","D:\\projects\\drum-machine\\src\\reportWebVitals.js":"2","D:\\projects\\drum-machine\\src\\App.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"6","hashOfConfig":"5"},{"size":1210,"mtime":1614192390243,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"z2qbjk",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},"D:\\projects\\drum-machine\\src\\index.js",[],["16","17"],"D:\\projects\\drum-machine\\src\\reportWebVitals.js",[],"D:\\projects\\drum-machine\\src\\App.js",["18"],"import React, {Component} from 'react';\nimport './App.css';\nimport drumKeys from './drumData.json'\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      lastAudio: \" \"\n    }\n  }\n \n  playAudio = (audioId, lastAudio)=>{\n    let drumSound = document.getElementById(audioId)\n    this.setState({lastAudio:lastAudio})\n    drumSound.play();\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n \n  handleKeyPress = (e) => {\n    let audioFound = drumKeys.find(x => x.keyCode == e.keyCode);\n    if (audioFound){\n      this.playAudio(audioFound.key, audioFound.id);\n    }\n  }\n\n  render (){\n     let keys = drumKeys.map((e,i) => \n        <button id={e.id}  className=\"drum-pad\" onClick = {()=>this.playAudio(e.key, e.id)} key = {i}>{e.key}\n          <audio src={e.url} className=\"clip\" id = {e.key}/>\n        </button>\n     );\n    return(\n      <div id = \"drum-machine\">\n        <div id = \"keysWrapper\">\n          {keys}\n        </div>\n        <div id = \"display\">{this.state.lastAudio}</div>\n      </div>\n    )\n  };\n}\nexport default App;\n",{"ruleId":"19","replacedBy":"20"},{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","severity":1,"message":"24","line":27,"column":51,"nodeType":"25","messageId":"26","endLine":27,"endColumn":53},"no-native-reassign",["27"],"no-negated-in-lhs",["28"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]